{"version":3,"sources":["components/UIElements/Button.js","components/UIElements/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/UIElements/Input.js","components/pages/CategorySelection.js","containers/CategoryContainer.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","Card","style","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Input","placeholder","id","label","onChange","htmlFor","e","initialValue","name","categoryId","CategorySelection","categoryList","setUser","isLoading","setToDefault","setUserinfoToDefault","useState","formData","setFormData","history","useHistory","onSubmit","event","preventDefault","localStorage","setItem","prevVal","target","required","LoadingSpinner","map","category","connect","state","loading","dispatch","updateScore","status","setCompletedToDefault","setUserInfoToDefault"],"mappings":"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","file":"static/js/5.1f54c0d8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || \"default\"} ${\r\n        props.inverse && \"button--inverse\"\r\n      } ${props.danger && \"button--danger\"}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\n\r\nimport \"./Input.css\";\r\n\r\nconst Input = ({ type, placeholder, id, label, value, onChange }) => {\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label htmlFor={id}>{label}</label>\r\n      <input\r\n        type={type}\r\n        placeholder={placeholder}\r\n        id={id}\r\n        value={value}\r\n        onChange={(e) => onChange(e)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Card from \"../UIElements/Card\";\r\nimport Input from \"../UIElements/Input\";\r\nimport Button from \"../UIElements/Button\";\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\";\r\n\r\nconst initialValue = {\r\n  name: \"\",\r\n  categoryId: 9,\r\n};\r\n\r\nconst CategorySelection = ({\r\n  categoryList,\r\n  setUser,\r\n  isLoading,\r\n  setToDefault,\r\n  setUserinfoToDefault,\r\n}) => {\r\n  const [formData, setFormData] = useState(initialValue);\r\n  const history = useHistory();\r\n\r\n  const handleChange = (event) => {\r\n    setFormData((prevVal) => ({\r\n      ...prevVal,\r\n      name: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setUser(formData.name);\r\n    localStorage.setItem(\"quizStarted\", \"true\");\r\n    setFormData(initialValue);\r\n    setToDefault();\r\n    setUserinfoToDefault();\r\n    history.push(`/category/${formData.categoryId}`);\r\n  };\r\n\r\n  const handleChangeCategory = (event) => {\r\n    setFormData((prevVal) => ({\r\n      ...prevVal,\r\n      categoryId: event.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Card className=\"entry-card\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>QUIZ FORM</h1>\r\n        <hr />\r\n        <Input\r\n          id=\"name\"\r\n          placeholder=\"Enter your name...\"\r\n          type=\"text\"\r\n          label=\"Name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <h4>SELECT QUIZ CATEGORY</h4>\r\n        {isLoading && <LoadingSpinner />}\r\n        {!isLoading && (\r\n          <div>\r\n            <select onChange={handleChangeCategory}>\r\n              {categoryList.map((category) => (\r\n                <option key={category.id} value={category.id}>\r\n                  {category.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n        {formData.name && (\r\n          <Button inverse type=\"submit\">\r\n            PLAY QUIZ\r\n          </Button>\r\n        )}\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CategorySelection;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport {\r\n  setUser,\r\n  updateScore,\r\n  setCompletedToDefault,\r\n  setUserInfoToDefault,\r\n} from \"../actions\";\r\nimport CategorySelection from \"../components/pages/CategorySelection\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categoryList: state.category,\r\n  isLoading: state.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateScore: (status) => dispatch(updateScore(status)),\r\n  setUser: (name) => dispatch(setUser(name)),\r\n  setToDefault: () => dispatch(setCompletedToDefault()),\r\n  setUserinfoToDefault: () => dispatch(setUserInfoToDefault()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategorySelection);\r\n"],"sourceRoot":""}